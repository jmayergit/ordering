{"version":3,"sources":["components/SelectInput.js","components/Item.js","components/SubmitButton.js","components/Errors.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["SelectInput","values","this","props","react_default","a","createElement","onChange","handleChange","map","value","key","React","Component","Item","_this","_this$props","item","dishes","id","className","e","handleDish","dish_no","components_SelectInput","handleServings","SubmitButton","text","onClick","handleSubmit","Errors","messages","message","Home","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMealCategory","synEvent","meal_category","currentTarget","setState","handleNumberOfPeople","number_of_people","parseInt","handleBackClick","part","state","handlePart1Submit","restaurants","RESTAURANTS","restaurant","handleRestaurantChange","getDishes","DISHES","forEach","dish","includes","push","handlePart2Submit","order","addItem","removeItem","index","splice","servings","rightNumberOfServings","total_servings","repeatingDish","repeat","handlePart3Submit","errors","length","handlePart4Submit","console","log","part1","components_SubmitButton","part2","part3","src_components_Item","part4","presentForm","components_Errors","App","src_pages_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7bd6b8c7.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass SelectInput extends React.Component {\n  render() {\n    const { values } = this.props\n    return (\n      <select onChange={this.props.handleChange}>\n        {values.map(value =>\n          <option key={value} value={value}>{value}</option>\n        )}\n      </select>\n    )\n  }\n}\n\nSelectInput.propTypes = {\n  values: PropTypes.array.isRequired,\n  handleChange: PropTypes.func\n};\n\nexport default SelectInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport SelectInput from './SelectInput'\nimport './Item.css'\n\nclass Item extends React.Component {\n  render() {\n    // item [dish, servings]\n    const { item, dishes, id } = this.props\n    return (\n      <div className=\"item\">\n        <select value={item[0]} onChange={(e) => this.props.handleDish(e, id)}>\n          {dishes.map(dish_no =>\n            <option key={dish_no} value={dish_no}>{dish_no}</option>\n          )}\n        </select>\n        <SelectInput value={item[1]} values={[1,2,3,4,5,6,7,8,9,10]} handleChange={(e) => this.props.handleServings(e, id)} />\n      </div>\n    )\n  }\n}\n\nItem.propTypes = {\n  item: PropTypes.array,\n  dishes: PropTypes.array,\n  id: PropTypes.number\n}\n\nexport default Item\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass SubmitButton extends React.Component {\n  render() {\n    const { text } = this.props\n    return (\n      <button onClick={this.props.handleSubmit}>{text}</button>\n    )\n  }\n}\n\nSubmitButton.propTypes = {\n  text: PropTypes.string,\n  handleSubmit: PropTypes.func\n}\n\nexport default SubmitButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Errors extends React.Component {\n  render() {\n    return (\n      <ul className=\"errors\">\n        {this.props.messages.map(message =>\n          <li key={message}>{message}</li>\n        )}\n      </ul>\n    )\n  }\n}\n\nErrors.propTypes = {\n  messages: PropTypes.array.isRequired\n}\n\nexport default Errors\n","import React from 'react'\nimport './Home.css'\nimport SelectInput from '../components/SelectInput'\nimport Item from '../components/Item'\nimport SubmitButton from '../components/SubmitButton'\nimport Errors from '../components/Errors'\nimport RESTAURANTS from '../data/restaurants'\nimport DISHES from '../data/dishes'\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      part: 1,\n\n      meal_category: 'breakfast',\n      number_of_people: 1,\n      restaurant: '',\n\n      restaurants: [],\n\n      dishes: [],\n      order: [], // [[dish, servings]],\n\n      errors: []\n    }\n  }\n\n  handleMealCategory = (synEvent) => {\n    const meal_category = synEvent.currentTarget.value\n    this.setState({\n      meal_category: meal_category\n    })\n  }\n\n  handleNumberOfPeople = (synEvent) => {\n    const number_of_people = parseInt(synEvent.currentTarget.value)\n    this.setState({\n      number_of_people: number_of_people\n    })\n  }\n\n  handleBackClick = () => {\n    const part = this.state.part\n    this.setState({\n      part: part - 1\n    })\n  }\n\n  handlePart1Submit = () => {\n    const restaurants = RESTAURANTS[this.state.meal_category]\n    this.setState({\n      part: 2,\n      restaurant: restaurants[0],\n      restaurants: restaurants\n    })\n  }\n\n  handleRestaurantChange = (synEvent) => {\n    const restaurant = synEvent.currentTarget.value\n    this.setState({\n      restaurant: restaurant\n    })\n  }\n\n  getDishes = () => {\n    let dishes = []\n    DISHES[\"dishes\"].forEach((dish) => {\n      if(dish[\"restaurant\"] === this.state.restaurant && dish[\"availableMeals\"].includes(this.state.meal_category)) {\n        dishes.push(dish[\"name\"])\n      }\n    })\n    return dishes\n  }\n\n  handlePart2Submit = () => {\n    // to do: don't reset order if restaurant stays the same\n    const dishes = this.getDishes()\n    this.setState({\n      part: 3,\n      dishes: dishes,\n      order: []\n    })\n  }\n\n  addItem = () => {\n    let order = this.state.order\n    order.push([this.state.dishes[0], 1])\n    this.setState({\n      order: order\n    })\n  }\n\n  removeItem = (synEvent, index) => {\n    let order = this.state.order\n    order.splice(index, 1)\n    this.setState({\n      order: order\n    })\n  }\n\n  handleDish = (synEvent, id) => {\n    const dish = synEvent.currentTarget.value\n    let order = this.state.order\n    order[id][0] = dish\n    this.setState({\n      order: order\n    })\n  }\n\n  handleServings = (synEvent, id) => {\n    const servings = parseInt(synEvent.currentTarget.value)\n    let order = this.state.order\n    order[id][1] = servings\n    this.setState({\n      order: order\n    })\n  }\n\n  rightNumberOfServings = () => {\n    let total_servings = 0\n    this.state.order.map(item =>\n      total_servings += item[1]\n    )\n    return total_servings >= this.state.number_of_people && total_servings <= 10\n  }\n\n  repeatingDish = () => {\n    let dishes = {}\n    let repeat = false\n    this.state.order.forEach((item) => {\n      if(dishes[item[0]]) {\n        repeat = true\n      }else {\n        dishes[item[0]] = true\n      }\n    })\n    return repeat\n  }\n\n  handlePart3Submit = () => {\n    let errors = []\n    if(!this.rightNumberOfServings()) {\n      errors.push(\"Must have at least one item for each person and the total number of items cannot be greater than ten.\")\n    }\n    if(this.repeatingDish()) {\n      errors.push(\"Cannot select the same dish twice, instead try adding more servings.\")\n    }\n\n    this.setState({\n      errors: errors\n    })\n\n    if(errors.length === 0) {\n      this.setState({\n        part: 4\n      })\n    }\n  }\n\n  handlePart4Submit = () => {\n    console.log(\"________________\");\n    console.log(\"Order:\");\n    console.log(this.state.order);\n    console.log(\"________________\");\n  }\n\n  part1 = () => {\n    return (\n      <div>\n        <h3>Select the type of meal and the number of people in your party</h3>\n        <div>\n          <select value={this.state.meal_category} onChange={this.handleMealCategory}>\n            <option value=\"breakfast\">Breakfast</option>\n            <option value=\"lunch\">Lunch</option>\n            <option value=\"dinner\">Dinner</option>\n          </select>\n        </div>\n        <div>\n          <SelectInput values={[1,2,3,4,5,6,7,8,9,10]} handleChange={this.handleNumberOfPeople} />\n        </div>\n        <div>\n          <SubmitButton text=\"Next\" handleSubmit={this.handlePart1Submit} />\n        </div>\n      </div>\n    )\n  }\n\n  part2 = () => {\n    return (\n      <div>\n        <h3>\n          Select which restaurant\n        </h3>\n        <select value={this.state.restaurant} onChange={this.handleRestaurantChange}>\n          {this.state.restaurants.map(restaurant =>\n            <option key={restaurant} value={restaurant}>{restaurant}</option>\n          )}\n        </select>\n        <div>\n          <button onClick={this.handleBackClick}>Back</button>\n          <SubmitButton text=\"Next\" handleSubmit={this.handlePart2Submit} />\n        </div>\n      </div>\n    )\n  }\n\n  part3 = () => {\n    return (\n      <div>\n        <h3>\n          Select dishes\n        </h3>\n        {this.state.order.map((item, index) =>\n          <div>\n            <Item\n              item={item}\n              id={index}\n              key={index}\n              dishes={this.state.dishes}\n              handleDish={this.handleDish}\n              handleServings={this.handleServings}/>\n            <button onClick={(e) => this.removeItem(e, index)}>X</button>\n          </div>\n        )}\n        <div>\n          <button onClick={this.addItem}>Add Item</button>\n          <button onClick={this.handleBackClick}>Back</button>\n          <SubmitButton text=\"Review Order\" handleSubmit={this.handlePart3Submit} />\n        </div>\n      </div>\n    )\n  }\n\n  part4 = () => {\n    return (\n      <div>\n        <h3>\n        Review order\n        </h3>\n        <div>\n          <ul>\n            {this.state.order.map((item) => (\n              <li key={item}>{item[0]}: {item[1]}</li>\n            ))}\n          </ul>\n        </div>\n        <button onClick={this.handleBackClick}>Back</button>\n        <SubmitButton text=\"Place Your Order\" handleSubmit={this.handlePart4Submit} />\n      </div>\n    )\n  }\n\n  presentForm = () => {\n    switch(this.state.part) {\n      case 1:\n        return this.part1()\n      case 2:\n        return this.part2()\n      case 3:\n        return this.part3()\n      case 4:\n        return this.part4()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        {this.presentForm()}\n        {this.state.errors.length > 0 && <Errors messages={this.state.errors} />}\n      </div>\n    );\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './pages/Home.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Home/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import { Provider } from 'react-redux'\n// import store from './redux/store'\n\nReactDOM.render(\n  // <Provider store={store}>\n    <App />, document.getElementById('root')\n  // </Provider>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}